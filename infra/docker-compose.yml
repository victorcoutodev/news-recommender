version: "3.8"

services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_ENABLE_ADMIN_SERVER=yes
      - ZOO_4LW_COMMANDS_WHITELIST=ruok,start,srvr,stat
      - REDIS_ADDR=redis:6379
    healthcheck:
      test: ["CMD-SHELL", "echo stat | nc localhost 2181 | grep Mode"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - zookeeper_data:/bitnami/zookeeper/data
    networks:
      - kafka_net  # ✅ adicionada a rede

  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data:/bitnami/kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --list --bootstrap-server localhost:9092"]
      interval: 10s
      timeout: 20s
      retries: 5
    networks:
      - kafka_net  # ✅ adicionada a rede

  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - kafka_net

  infra-collector:
    build:
      context: ../backend
      dockerfile: collector/Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BROKER=kafka:9092
    networks:
      - kafka_net

  infra-processor:
    build:
      context: ../backend
      dockerfile: processor/Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BROKER=kafka:9092
      - OLLAMA_HOST=http://host.docker.internal:11434
      - REDIS_ADDR=redis:6379
      - MONGO_URI=mongodb://mongo:27017
      
    ports:
      - "8080:8080"
    networks:
      - kafka_net
    extra_hosts:
      - "host.docker.internal:host-gateway"  # ✅ necessário para que o container veja o Ollama local

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kafka_net

volumes:
  zookeeper_data:
  kafka_data:
  redis_data:
  mongo_data:

networks:
  kafka_net:
    driver: bridge
